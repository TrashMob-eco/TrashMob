name: Build Android app

on:
    workflow_call:
        inputs:
            environment:
                required: true
                type: string
            configuration:
                required: true
                type: string
            build_number:
                required: true
                type: string
            dotnet_version:
                required: true
                type: string
        secrets:
            android_keystore:
                required: true
            android_keystore_password:
                required: true

jobs:
    build:
        runs-on: windows-latest
        environment: ${{ inputs.environment }}
        name: Android Build

        steps:
        - uses: actions/checkout@v3

        - name: Use build number
          run: |
            $buildNumber=${{ inputs.build_number }}
            echo "Build Number: $buildNumber"

        - name: Update Build Number
          run: |
            $content = Get-Content TrashMobMobile/TrashMobMobile.csproj -Raw

            $newContent = $content -replace '<ApplicationVersion>.*</ApplicationVersion>', "<ApplicationVersion>$buildNumber</ApplicationVersion>"

            Set-Content TrashMobMobile/TrashMobMobile.csproj -Value $newContent

        - name: Setup DotNet ${{ inputs.dotnet_version }} Environment
          uses: actions/setup-dotnet@v3
          with:
            dotnet-version: ${{ inputs.dotnet_version }}

        - name: Install MAUI Workload
          run: |
            dotnet nuget locals all --clear
            dotnet workload install maui --ignore-failed-sources
            dotnet workload install android maui wasm-tools --source https://api.nuget.org/v3/index.json

        - name: Restore Dependencies
          run: |
            dotnet restore TrashMobMobileApp.sln

        - name: Publish Android Mobile App
          run: |
            dotnet publish TrashMobMobile/TrashMobMobile.csproj -c:${{ inputs.configuration }} -f:net8.0-android --no-restore /p:AndroidPackageFormat="aab"

        # Store Android Signing Keystore and password in Secrets using base64 encoding
        # https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/certutil
        # command line util to encode to base64 on windows
        - name: Extract Android signing key from env
          shell: bash
          run: |
            cd TrashMobMobile
            mkdir android
            echo "${{ secrets.android_keystore }}" > android/trashmobmobileapp.jks.base64
            base64 -d android/trashmobmobileapp.jks.base64 > android/trashmobmobileapp.decrypted.jks
        # check android SDK paths etc in installed VM : https://github.com/actions/virtual-environments#available-environments
        - name: Sign dev build
          shell: bash
          run: |
            cd TrashMobMobile
            jarsigner -keystore android/trashmobmobileapp.decrypted.jks -storepass "${{ secrets.android_keystore_password }}" -signedjar bin/${{ inputs.configuration }}/net8.0-android/publish/eco.trashmob.trashmobmobileapp-Signed.aab bin/${{ inputs.configuration }}/net8.0-android/publish/eco.trashmob.trashmobmobileapp.aab key

        - uses: actions/upload-artifact@v3.1.2
          with:
            name: artifacts-android-${{ inputs.build_number }}
            path: |
              TrashMobMobile\bin\${{ inputs.configuration }}\net8.0-android\publish\*.aab
