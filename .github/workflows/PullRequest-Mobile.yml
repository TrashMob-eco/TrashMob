# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: TrashMob Mobile App Pull Request Build

on:
  pull_request:
    branches: [ "main" ]
    paths:
      - '.github/**'
      - 'TrashMob.Models/**'
      - 'TrashMobMobileApp/**'
      - 'TrashMobMobileApp.sln'

env:
  DOTNET_VERSION: '7.0.x'  # set this to the dotnet version to use
  DOTNET_VERSION2: '7.0.x'  # set this to the dotnet version to use
  CONFIGURATION: Debug

jobs:
  buildAndroidApp:
    runs-on: windows-latest
    environment: test
    name: Android Build

    steps:
    - uses: actions/checkout@v2

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Setup DotNet ${{ env.DOTNET_VERSION2 }} Environment
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION2 }}

    - name: Install MAUI Workload
      run: |
        dotnet nuget locals all --clear
        dotnet workload install maui --ignore-failed-sources
        dotnet workload install android maui wasm-tools --source https://api.nuget.org/v3/index.json

    - name: Restore Dependencies
      run: | 
        dotnet restore TrashMobMobileApp.sln

    - name: Publish Android Mobile App
      run: |
        dotnet publish TrashMobMobileApp.sln -c:${{ env.CONFIGURATION }} -f:net7.0-android --no-restore 
      
    # Store Android Signing Keystore and password in Secrets using base64 encoding
    # https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/certutil
    # command line util to encode to base64 on windows
    - name: Extract Android signing key from env
      shell: bash
      run: |
        cd TrashMobMobileApp
        mkdir android
        echo "${{ secrets.ANDROID_KEYSTORE }}" > android/trashmobmobileapp.jks.base64
        base64 -d android/trashmobmobileapp.jks.base64 > android/trashmobmobileapp.decrypted.jks
    # check android SDK paths etc in installed VM : https://github.com/actions/virtual-environments#available-environments
    - name: Sign dev build
      shell: bash
      run: |
        cd TrashMobMobileApp
        jarsigner -keystore android/trashmobmobileapp.decrypted.jks -storepass "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" -signedjar bin/${{ env.CONFIGURATION }}/net7.0-android/publish/eco.trashmob.trashmobmobileapp-Signed.aab bin/${{ env.CONFIGURATION }}/net7.0-android/publish/eco.trashmob.trashmobmobileapp.aab key

    - uses: actions/upload-artifact@v2
      with:
        name: artifacts-android
        path: |
          TrashMobMobileApp\bin\${{ env.CONFIGURATION }}\net7.0-android\publish\*.apk

  buildiOSApp:
    runs-on: macos-12
    environment: test
    name: iOS Build

    steps:
    - uses: actions/checkout@v2

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Setup DotNet ${{ env.DOTNET_VERSION2 }} Environment
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION2 }}

    - name: Install MAUI Workload
      run: |
        dotnet nuget locals all --clear
        dotnet workload install maui --ignore-failed-sources
        dotnet workload install ios maccatalyst tvos macos maui wasm-tools --source https://api.nuget.org/v3/index.json --ignore-failed-sources

    - name: Set XCode Version
      if: runner.os == 'macOS'
      shell: bash
      run: |
        sudo xcode-select -s "/Applications/Xcode_14.1.app"
        echo "MD_APPLE_SDK_ROOT=/Applications/Xcode_14.1.app" >> $GITHUB_ENV

    - name: Restore Dependencies
      run: | 
        dotnet restore TrashMobMobileApp.sln

    - name: Build MAUI iOS
      run: dotnet build TrashMobMobileApp.sln -c ${{ env.CONFIGURATION }} -f net7.0-ios --no-restore /p:buildForSimulator=False /p:packageApp=True /p:ArchiveOnBuild=False

    - name: Upload iOS Artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        name: trashmobmobileapp-ios-pr-build
        path: trashmobmobileapp/bin/${{ env.CONFIGURATION }}/net7.0-ios/**/*.app