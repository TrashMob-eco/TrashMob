<?xml version="1.0" encoding="utf-8" ?>
<ContentPage x:Class="TrashMobMobile.Pages.CreateEventPage"
             xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:maps="http://schemas.microsoft.com/dotnet/2021/maui/maps"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:controls="clr-namespace:TrashMobMobile.Controls"
             Title="Create Event">
    <ScrollView>
        <Grid>
            <VerticalStackLayout>
                <Grid ColumnDefinitions="1*, 1*, 1*, 1*"
                      MaximumWidthRequest="400"
                      RowDefinitions="Auto, Auto, Auto, Auto, Auto, Auto, Auto">
                    <VerticalStackLayout Grid.Row="0"
                                         Grid.ColumnSpan="4"
                                         Margin="10"
                                         Spacing="5">
                        <Label FontAttributes="Bold"
                               FontSize="Micro"
                               HorizontalOptions="Start"
                               HorizontalTextAlignment="Center"
                               Text="Name"
                               VerticalOptions="Center" />

                        <controls:TMEntry Text="{Binding EventViewModel.Name}" />
                    </VerticalStackLayout>

                    <VerticalStackLayout Grid.Row="1"
                                         Grid.Column="0"
                                         Grid.ColumnSpan="2"
                                         Margin="10"
                                         Spacing="5">
                        <Label FontAttributes="Bold"
                               FontSize="Micro"
                               HorizontalOptions="Start"
                               HorizontalTextAlignment="Center"
                               Text="Event Date"
                               VerticalOptions="Center" />

                        <Frame Style="{x:StaticResource Frame}">
                            <DatePicker Grid.Row="1"
                                        Grid.Column="1"
                                        Date="{Binding EventViewModel.EventDateOnly}" />
                        </Frame>
                    </VerticalStackLayout>

                    <VerticalStackLayout Grid.Row="1"
                                         Grid.Column="2"
                                         Grid.ColumnSpan="2"
                                         Margin="10"
                                         Spacing="5">
                        <Label FontAttributes="Bold"
                               FontSize="Micro"
                               HorizontalOptions="Start"
                               HorizontalTextAlignment="Center"
                               Text="Event Time"
                               VerticalOptions="Center" />

                        <Frame Style="{x:StaticResource Frame}">
                            <TimePicker Grid.Row="2"
                                        Grid.Column="1"
                                        Time="{Binding EventViewModel.EventTime}" />
                        </Frame>
                    </VerticalStackLayout>

                    <VerticalStackLayout Grid.Row="2"
                                         Grid.Column="0"
                                         Grid.ColumnSpan="2"
                                         Margin="10"
                                         Spacing="5">
                        <Label FontAttributes="Bold"
                               FontSize="Micro"
                               HorizontalOptions="Start"
                               HorizontalTextAlignment="Center"
                               Text="Duration Hours"
                               VerticalOptions="Center" />

                        <Frame Style="{x:StaticResource Frame}">
                            <Entry Keyboard="Numeric"
                                   Text="{Binding EventViewModel.DurationHours}">
                                <Entry.Behaviors>
                                    <toolkit:NumericValidationBehavior x:Name="durationHoursValidator"
                                                                       Flags="ValidateOnValueChanged"
                                                                       MaximumDecimalPlaces="0"
                                                                       MaximumValue="10"
                                                                       MinimumValue="1" />
                                </Entry.Behaviors>
                            </Entry>
                        </Frame>
                    </VerticalStackLayout>

                    <VerticalStackLayout Grid.Row="2"
                                         Grid.Column="2"
                                         Grid.ColumnSpan="2"
                                         Margin="10"
                                         Spacing="5">
                        <Label FontAttributes="Bold"
                               FontSize="Micro"
                               HorizontalOptions="Start"
                               HorizontalTextAlignment="Center"
                               Text="Duration Minutes"
                               VerticalOptions="Center" />

                        <Frame Style="{x:StaticResource Frame}">
                            <Entry Keyboard="Numeric"
                                   Text="{Binding EventViewModel.DurationMinutes}">
                                <Entry.Behaviors>
                                    <toolkit:NumericValidationBehavior x:Name="durationMinutesValidator"
                                                                       Flags="ValidateOnValueChanged"
                                                                       MaximumDecimalPlaces="0"
                                                                       MaximumValue="59"
                                                                       MinimumValue="0" />
                                </Entry.Behaviors>
                            </Entry>
                        </Frame>
                    </VerticalStackLayout>

                    <VerticalStackLayout Grid.Row="3"
                                         Grid.ColumnSpan="4"
                                         Margin="10"
                                         Spacing="5">
                        <Label FontAttributes="Bold"
                               FontSize="Micro"
                               HorizontalOptions="Start"
                               HorizontalTextAlignment="Center"
                               Text="Description"
                               VerticalOptions="Center" />

                        <Frame Style="{x:StaticResource Frame}">
                            <Editor Text="{Binding EventViewModel.Description}">
                                <Editor.Behaviors>
                                    <toolkit:TextValidationBehavior x:Name="descriptionValidator"
                                                                    Flags="ValidateOnValueChanged"
                                                                    MinimumLength="10" />
                                </Editor.Behaviors>
                            </Editor>
                        </Frame>
                    </VerticalStackLayout>


                    <VerticalStackLayout Grid.Row="4"
                                         Grid.Column="0"
                                         Grid.ColumnSpan="2"
                                         Margin="10"
                                         Spacing="5">
                        <Label FontAttributes="Bold"
                               FontSize="Micro"
                               HorizontalOptions="Start"
                               HorizontalTextAlignment="Center"
                               Text="Event Type"
                               VerticalOptions="Center" />

                        <Frame Style="{x:StaticResource Frame}">
                            <Picker Title="Event Type"
                                    ItemsSource="{Binding ETypes}"
                                    SelectedItem="{Binding SelectedEventType}" />
                        </Frame>
                    </VerticalStackLayout>

                    <VerticalStackLayout Grid.Row="4"
                                         Grid.Column="2"
                                         Margin="10"
                                         Spacing="5">
                        <Label FontAttributes="Bold"
                               FontSize="Micro"
                               HorizontalOptions="Start"
                               HorizontalTextAlignment="Center"
                               Text="Max Attendees"
                               VerticalOptions="Center" />

                        <Frame Style="{x:StaticResource Frame}">
                            <Entry Keyboard="Numeric"
                                   Text="{Binding EventViewModel.MaxNumberOfParticipants}">
                                <Entry.Behaviors>
                                    <toolkit:NumericValidationBehavior x:Name="maxNumberOfParticipantsValidator"
                                                                       Flags="ValidateOnValueChanged"
                                                                       MaximumDecimalPlaces="0"
                                                                       MinimumValue="0" />
                                </Entry.Behaviors>
                            </Entry>
                        </Frame>
                    </VerticalStackLayout>

                    <VerticalStackLayout Grid.Row="4"
                                         Grid.Column="3"
                                         Margin="10"
                                         Spacing="5">
                        <Label FontAttributes="Bold"
                               FontSize="Micro"
                               HorizontalOptions="Start"
                               HorizontalTextAlignment="Center"
                               Text="Is Event Public?"
                               VerticalOptions="Center" />

                        <Frame Style="{x:StaticResource Frame}">
                            <CheckBox IsChecked="{Binding EventViewModel.IsEventPublic}" />
                        </Frame>
                    </VerticalStackLayout>

                    <Label Grid.Row="5"
                           Grid.ColumnSpan="4"
                           Margin="5"
                           FontSize="Micro"
                           HorizontalOptions="Center"
                           HorizontalTextAlignment="Center"
                           Text="Click on the map to set the event location."
                           VerticalOptions="Center" />

                    <maps:Map x:Name="eventLocationMap"
                              Grid.Row="6"
                              Grid.ColumnSpan="4"
                              Margin="10"
                              HeightRequest="250"
                              IsScrollEnabled="True"
                              IsShowingUser="True"
                              ItemsSource="{Binding Events}"
                              MapClicked="OnMapClicked">
                        <maps:Map.ItemTemplate>
                            <DataTemplate>
                                <maps:Pin Address="{Binding Address.StreetAddress}"
                                          Label="{Binding Name}"
                                          Location="{Binding Address.Location}" />
                            </DataTemplate>
                        </maps:Map.ItemTemplate>
                    </maps:Map>
                </Grid>

                <Grid ColumnDefinitions="1*, 1*"
                      RowDefinitions="Auto, Auto, Auto">
                    <VerticalStackLayout Grid.Row="0"
                                         Grid.ColumnSpan="2"
                                         Margin="10"
                                         Spacing="5">
                        <Label FontAttributes="Bold"
                               FontSize="Micro"
                               HorizontalOptions="Start"
                               HorizontalTextAlignment="Center"
                               Text="Address"
                               VerticalOptions="Center" />

                        <Frame Style="{x:StaticResource Frame}">
                            <Label FontSize="Micro"
                                   Text="{Binding EventViewModel.Address.StreetAddress}" />
                        </Frame>
                    </VerticalStackLayout>
                    <VerticalStackLayout Grid.Row="1"
                                         Grid.Column="0"
                                         Margin="10"
                                         Spacing="5">
                        <Label FontAttributes="Bold"
                               FontSize="Micro"
                               HorizontalOptions="Start"
                               HorizontalTextAlignment="Center"
                               Text="City"
                               VerticalOptions="Center" />

                        <Frame Style="{x:StaticResource Frame}">
                            <Label FontSize="Micro"
                                   Text="{Binding EventViewModel.Address.City}" />
                        </Frame>
                    </VerticalStackLayout>
                    <VerticalStackLayout Grid.Row="1"
                                         Grid.Column="1"
                                         Margin="10"
                                         Spacing="5">
                        <Label FontAttributes="Bold"
                               FontSize="Micro"
                               HorizontalOptions="Start"
                               HorizontalTextAlignment="Center"
                               Text="State/Region"
                               VerticalOptions="Center" />

                        <Frame Style="{x:StaticResource Frame}">
                            <Label FontSize="Micro"
                                   Text="{Binding EventViewModel.Address.Region}" />
                        </Frame>
                    </VerticalStackLayout>
                    <VerticalStackLayout Grid.Row="2"
                                         Grid.Column="0"
                                         Margin="10"
                                         Spacing="5">
                        <Label FontAttributes="Bold"
                               FontSize="Micro"
                               HorizontalOptions="Start"
                               HorizontalTextAlignment="Center"
                               Text="Country"
                               VerticalOptions="Center" />

                        <Frame Style="{x:StaticResource Frame}">
                            <Label FontSize="Micro"
                                   Text="{Binding EventViewModel.Address.Country}" />
                        </Frame>
                    </VerticalStackLayout>
                    <VerticalStackLayout Grid.Row="2"
                                         Grid.Column="1"
                                         Margin="10"
                                         Spacing="5">
                        <Label FontAttributes="Bold"
                               FontSize="Micro"
                               HorizontalOptions="Start"
                               HorizontalTextAlignment="Center"
                               Text="Postal Code"
                               VerticalOptions="Center" />

                        <Frame Style="{x:StaticResource Frame}">
                            <Label FontSize="Micro"
                                   Text="{Binding EventViewModel.Address.PostalCode}" />
                        </Frame>
                    </VerticalStackLayout>
                </Grid>

                <Button Margin="10"
                        Command="{Binding SaveEventCommand}"
                        Text="Save Event">
                    <Button.Triggers>
                        <MultiTrigger TargetType="Button">
                            <MultiTrigger.Conditions>
                                <BindingCondition Binding="{Binding Source={x:Reference nameValidator}, Path=IsValid}"
                                                  Value="True" />
                                <BindingCondition Binding="{Binding Source={x:Reference descriptionValidator}, Path=IsValid}"
                                                  Value="True" />
                                <BindingCondition Binding="{Binding Source={x:Reference maxNumberOfParticipantsValidator}, Path=IsValid}"
                                                  Value="True" />
                                <BindingCondition Binding="{Binding Source={x:Reference durationHoursValidator}, Path=IsValid}"
                                                  Value="True" />
                                <BindingCondition Binding="{Binding Source={x:Reference durationMinutesValidator}, Path=IsValid}"
                                                  Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="True" />
                        </MultiTrigger>
                    </Button.Triggers>
                </Button>

                <Button Margin="10"
                        Command="{Binding ManageEventPartnersCommand}"
                        IsEnabled="{Binding IsManageEventPartersEnabled}"
                        Text="Manage Event Partners" />

                <Label FontSize="Micro"
                       HorizontalOptions="Center"
                       HorizontalTextAlignment="Center"
                       TextColor="Red"
                       VerticalOptions="Center">
                    <Label.Triggers>
                        <MultiTrigger TargetType="Label">
                            <MultiTrigger.Conditions>
                                <BindingCondition Binding="{Binding Source={x:Reference nameValidator}, Path=IsValid}"
                                                  Value="True" />
                                <BindingCondition Binding="{Binding Source={x:Reference descriptionValidator}, Path=IsValid}"
                                                  Value="True" />
                                <BindingCondition Binding="{Binding Source={x:Reference maxNumberOfParticipantsValidator}, Path=IsValid}"
                                                  Value="True" />
                                <BindingCondition Binding="{Binding Source={x:Reference durationHoursValidator}, Path=IsValid}"
                                                  Value="True" />
                                <BindingCondition Binding="{Binding Source={x:Reference durationMinutesValidator}, Path=IsValid}"
                                                  Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="IsVisible" Value="False" />
                        </MultiTrigger>
                        <DataTrigger Binding="{Binding Source={x:Reference nameValidator}, Path=IsValid}"
                                     TargetType="Label"
                                     Value="False">
                            <Setter Property="Text" Value="Name is required and must be at least 5 characters." />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Source={x:Reference descriptionValidator}, Path=IsValid}"
                                     TargetType="Label"
                                     Value="False">
                            <Setter Property="Text" Value="Description is required and must be at least 10 characters." />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Source={x:Reference maxNumberOfParticipantsValidator}, Path=IsValid}"
                                     TargetType="Label"
                                     Value="False">
                            <Setter Property="Text" Value="Maximum Participants cannot be less than 0." />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Source={x:Reference durationHoursValidator}, Path=IsValid}"
                                     TargetType="Label"
                                     Value="False">
                            <Setter Property="Text" Value="Duration Hours must be between 1 and 10." />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Source={x:Reference durationMinutesValidator}, Path=IsValid}"
                                     TargetType="Label"
                                     Value="False">
                            <Setter Property="Text" Value="Duration Minutes must be between 0 and 59." />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
            </VerticalStackLayout>
            <BoxView BackgroundColor="{StaticResource TransparentBlack}"
                     HorizontalOptions="Fill"
                     IsVisible="{Binding IsBusy}"
                     VerticalOptions="Fill" />
            <ActivityIndicator HorizontalOptions="Center"
                               IsRunning="{Binding IsBusy}"
                               IsVisible="{Binding IsBusy}"
                               VerticalOptions="Center" />
        </Grid>
    </ScrollView>
</ContentPage>
