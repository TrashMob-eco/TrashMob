<?xml version="1.0" encoding="utf-8"?>

<createEvent:BaseStepClass xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
                           xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                           xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
                           xmlns:viewModels="clr-namespace:TrashMobMobile.ViewModels"
                           xmlns:createEvent="clr-namespace:TrashMobMobile.Pages.CreateEvent"
                           x:DataType="viewModels:CreateEventViewModelNew"
                           x:Class="TrashMobMobile.Pages.CreateEvent.Step1">
    <ScrollView>
        <Grid>
            <VerticalStackLayout Style="{StaticResource OuterVerticalStack}">
                <Grid ColumnDefinitions="*, *"
                      MaximumWidthRequest="400"
                      RowDefinitions="Auto, Auto, Auto, Auto, Auto">
                    <VerticalStackLayout Grid.Row="0"
                                         Grid.ColumnSpan="2"
                                         Margin="10"
                                         Spacing="5">
                        <Label Text="Name" Style="{StaticResource FieldLabel}" />
                        <Entry Text="{Binding EventViewModel.Name}">
                            <!-- <Entry.Behaviors> -->
                            <!--     <toolkit:TextValidationBehavior Flags="ValidateOnValueChanged" MinimumLength="5" -->
                            <!--                                     x:Name="nameValidator" /> -->
                            <!-- </Entry.Behaviors> -->
                        </Entry>
                    </VerticalStackLayout>

                    <VerticalStackLayout Grid.Row="1"
                                         Grid.Column="0"
                                         Grid.ColumnSpan="2"
                                         Margin="10"
                                         Spacing="5">
                        <Label Text="Event Date" Style="{StaticResource FieldLabel}" />

                        <Border Style="{x:StaticResource RoundBorder}">
                            <DatePicker
                                Date="{Binding EventViewModel.EventDateOnly}" />
                        </Border>
                    </VerticalStackLayout>
                    <VerticalStackLayout Grid.Row="2" Grid.ColumnSpan="2">
                        <Label Text="Event Type" Style="{StaticResource FieldLabel}" />

                        <Border Style="{x:StaticResource RoundBorder}">
                            <Picker Title="Event Type"
                                    ItemsSource="{Binding ETypes}"
                                    SelectedItem="{Binding SelectedEventType}" />
                        </Border>
                    </VerticalStackLayout>

                    <VerticalStackLayout Grid.Row="3" Grid.Column="0">
                        <Label Text="Start time" Style="{StaticResource FieldLabel}" />

                        <Entry Keyboard="Numeric"
                               Text="{Binding EventViewModel.DurationHours}">
                            <!-- <Entry.Behaviors> -->
                            <!--     <toolkit:NumericValidationBehavior Flags="ValidateOnValueChanged" -->
                            <!--                                        x:Name="durationHoursValidator" MinimumValue="1" -->
                            <!--                                        MaximumValue="10" MaximumDecimalPlaces="0" /> -->
                            <!-- </Entry.Behaviors> -->
                        </Entry>
                    </VerticalStackLayout>

                    <VerticalStackLayout Grid.Row="3" Grid.Column="1">
                        <Label Text="End time" Style="{StaticResource FieldLabel}" />

                        <Entry Keyboard="Numeric"
                               Text="{Binding EventViewModel.DurationMinutes}">
                            <!-- <Entry.Behaviors> -->
                            <!--     <toolkit:NumericValidationBehavior Flags="ValidateOnValueChanged" -->
                            <!--                                        x:Name="durationMinutesValidator" MinimumValue="0" -->
                            <!--                                        MaximumValue="59" MaximumDecimalPlaces="0" /> -->
                            <!-- </Entry.Behaviors> -->
                        </Entry>
                    </VerticalStackLayout>
                    <VerticalStackLayout Grid.Row="4" Grid.ColumnSpan="2">
                        <Label Text="Description" Style="{StaticResource FieldLabel}" />
                        <Editor Text="{Binding EventViewModel.Description}">
                            <!-- <Editor.Behaviors> -->
                            <!--     <toolkit:TextValidationBehavior Flags="ValidateOnValueChanged" MinimumLength="10" -->
                            <!--                                     x:Name="descriptionValidator" /> -->
                            <!-- </Editor.Behaviors> -->
                        </Editor>
                    </VerticalStackLayout>
                </Grid>
                <!--TODO: check with Shiyi, but I think the validations should be with their respective elements
                            rather than at the end of the page. Especially in a scrollview.
                -->
                <Label FontSize="Micro"
                       HorizontalOptions="Center"
                       HorizontalTextAlignment="Center"
                       TextColor="Red"
                       VerticalOptions="Center">
                    <Label.Triggers>
                        <MultiTrigger TargetType="Label">
                            <MultiTrigger.Conditions>
                                <!-- <BindingCondition Binding="{Binding Source={x:Reference nameValidator}, Path=IsValid}" -->
                                <!--                   Value="True" /> -->
                                <!-- <BindingCondition -->
                                <!--     Binding="{Binding Source={x:Reference descriptionValidator}, Path=IsValid}" -->
                                <!--     Value="True" /> -->
                                <!-- <BindingCondition -->
                                <!--     Binding="{Binding Source={x:Reference maxNumberOfParticipantsValidator}, Path=IsValid}" -->
                                <!--     Value="True" /> -->
                                <!-- <BindingCondition -->
                                <!--     Binding="{Binding Source={x:Reference durationHoursValidator}, Path=IsValid}" -->
                                <!--     Value="True" /> -->
                                <!-- <BindingCondition -->
                                <!--     Binding="{Binding Source={x:Reference durationMinutesValidator}, Path=IsValid}" -->
                                <!--     Value="True" /> -->
                            </MultiTrigger.Conditions>
                            <Setter Property="IsVisible" Value="False" />
                        </MultiTrigger>
                        <!-- <DataTrigger Binding="{Binding Source={x:Reference nameValidator}, Path=IsValid}" -->
                        <!--              TargetType="Label" -->
                        <!--              Value="False"> -->
                        <!--     <Setter Property="Text" Value="Name is required and must be at least 5 characters." /> -->
                        <!-- </DataTrigger> -->
                        <!-- <DataTrigger Binding="{Binding Source={x:Reference descriptionValidator}, Path=IsValid}" -->
                        <!--              TargetType="Label" -->
                        <!--              Value="False"> -->
                        <!--     <Setter Property="Text" Value="Description is required and must be at least 10 characters." /> -->
                        <!-- </DataTrigger> -->
                        <!-- <DataTrigger -->
                        <!--     Binding="{Binding Source={x:Reference maxNumberOfParticipantsValidator}, Path=IsValid}" -->
                        <!--     TargetType="Label" -->
                        <!--     Value="False"> -->
                        <!--     <Setter Property="Text" Value="Maximum Participants cannot be less than 0." /> -->
                        <!-- </DataTrigger> -->
                        <!-- <DataTrigger Binding="{Binding Source={x:Reference durationHoursValidator}, Path=IsValid}" -->
                        <!--              TargetType="Label" -->
                        <!--              Value="False"> -->
                        <!--     <Setter Property="Text" Value="Duration Hours must be between 1 and 10." /> -->
                        <!-- </DataTrigger> -->
                        <!-- <DataTrigger Binding="{Binding Source={x:Reference durationMinutesValidator}, Path=IsValid}" -->
                        <!--              TargetType="Label" -->
                        <!--              Value="False"> -->
                        <!--     <Setter Property="Text" Value="Duration Minutes must be between 0 and 59." /> -->
                        <!-- </DataTrigger> -->
                    </Label.Triggers>
                </Label>
            </VerticalStackLayout>
        </Grid>
    </ScrollView>
</createEvent:BaseStepClass>