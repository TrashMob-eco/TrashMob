@*TODO: move to css style sheets*@
<style>
    .tm-event-list {
        height: 100%;
        width: 100%;
        padding: 20px;
        position: relative;
    }

        .tm-event-list .tm-loader {
            top: 50%;
            position: fixed;
        }

        .tm-event-list .tm-event-card {
            margin-top: 10px;
        }

        .tm-event-list .tm-create-event-btn {
            position: fixed;
            bottom: 10px;
            right: 10px;
        }

        .tm-event-list .tm-no-event-container {
            text-align: center;
        }
</style>

<ErrorBoundary>
    <ChildContent>
        <MudButton Color="ComponentCommon.PrimaryColor" OnClick="@(() => OnViewMapAllEvents(_mobEvents))">Show Map View</MudButton>
        <MudContainer Class="tm-event-list">
            <MudOverlay @bind-Visible="_isLoading" Absolute>
                <MudProgressCircular Color="ComponentCommon.DefaultColor" Indeterminate Class="tm-loader" />
            </MudOverlay>
            @if (_mobEventsStatic.Any())
            {
                <MudStack Style="width: 100%" Row>
                    <MudTextField T="string"
                              Style="width: 100%"
                              Adornment="@Adornment.End"
                              AdornmentIcon="@Icons.Material.Filled.Search"
                              Placeholder="Search event.."
                              Text="@_eventSearchText"
                              TextChanged="@OnSearchTextChanged"
                              Immediate />
                </MudStack>
                <MudVirtualize Context="mob" Items="_mobEvents">
                    <MudCard Class="tm-event-card">
                        <MudCardHeader>
                            <CardHeaderContent>
                                <MudStack Row>
                                    <MudText Typo="Typo.subtitle2">@mob.Name</MudText>
                                </MudStack>
                            </CardHeaderContent>
                        </MudCardHeader>
                        <MudCardContent>
                            <MudText Typo="Typo.body2"><strong>Address: </strong>@mob.GetFormattedAddress()</MudText>
                            <MudText Typo="Typo.body2"><strong>Event date: </strong>@mob.EventDate.GetFormattedLocalDate()</MudText>
                            <MudText Typo="Typo.body2"><strong>Event time: </strong>@mob.EventDate.GetFormattedLocalTime()</MudText>
                        </MudCardContent>
                        <MudCardActions>
                            <MudStack Style="@ComponentCommon.FullWidth" Row Justify="@Justify.SpaceBetween">
                                <MudStack Row>
                                    <MudButton Color="@ComponentCommon.PrimaryColor"
                                           Variant="@ComponentCommon.CardButtonVariant"
                                           OnClick="@(() => OnViewEventDetails(mob))">View</MudButton>
                                    @if (!mob.IsEventLead())
                                    {
                                        @if (!_userAttendingEventIds.Contains(mob.Id))
                                        {
                                            <MudButton Color="@ComponentCommon.PrimaryColor"
                                               Variant="@ComponentCommon.CardButtonVariant"
                                               OnClick="@(async () => await OnRegisterAsync(mob))">Register</MudButton>
                                        }
                                        else
                                        {
                                            <MudButton Color="@ComponentCommon.PrimaryColor"
                                               Variant="@ComponentCommon.CardButtonVariant"
                                               OnClick="@(async () => await OnUnregisterAsync(mob))">Unregister</MudButton>
                                        }
                                    }
                                </MudStack>
                                <MudStack Row>
                                    <MudIconButton Icon="@Icons.Material.Filled.Map"
                                               Color="ComponentCommon.PrimaryColor" 
                                               OnClick="@(() => OnViewMap(mob))" />
                                </MudStack>
                            </MudStack>
                        </MudCardActions>
                    </MudCard>
                </MudVirtualize>
            }
            else
            {
                if (!_isLoading)
                {
                    <MudContainer Class="tm-no-event-container">
                        <MudText>There are no events happening! Get started by creating your own.</MudText>
                    </MudContainer>
                }
            }
        </MudContainer>
    </ChildContent>
    <ErrorContent>
        @context.Message
    </ErrorContent>
</ErrorBoundary>
